{"version":3,"file":"js-sdk.esm.min.js","sources":["../src/shared/user-agent.ts","../src/shared/is-android.ts","../src/shared/global.ts","../src/shared/api-name.ts","../src/shared/is-web.ts","../src/shared/api-method.ts","../src/bridges/invoke.ts","../src/bridges/eventbus.ts","../src/bridges/index.ts","../src/init.ts","../src/shared/bridge-event.ts","../src/shared/api-error.ts","../src/shared/enums.ts","../src/shared/reporter/index.ts","../src/apis/utils.ts","../src/apis/miniprogram/close.ts","../src/apis/miniprogram/gen-env.ts","../src/apis/miniprogram/navigate-back.ts","../src/apis/miniprogram/navigate-to.ts","../src/apis/miniprogram/post-message.ts","../src/apis/miniprogram/re-launch.ts","../src/apis/miniprogram/redirect-to.ts","../src/apis/miniprogram/switch-tab.ts","../src/apis/native/call-native-api.ts","../src/apis/native/report/report-event.ts","../src/apis/native/navigate/exit-mini-program.ts","../src/apis/native/open-api/trade-pay.ts","../src/apis/native/capsule-style.ts","../src/apis/native/choose-contact.ts","../src/apis/native/choose-image.ts","../src/apis/native/clear-storage.ts","../src/apis/native/bluetooth/close-ble-connection.ts","../src/apis/native/bluetooth/close-bluetooth-adapter.ts","../src/apis/native/bluetooth/create-ble-connection.ts","../src/apis/native/download-file.ts","../src/apis/native/get-auth-code.ts","../src/apis/native/bluetooth/get-ble-device-characteristics.ts","../src/apis/native/bluetooth/get-ble-device-services.ts","../src/apis/native/get-background-fetch-data.ts","../src/apis/native/get-launch-options-sync.ts","../src/apis/native/get-local-img-data.ts","../src/apis/native/get-location.ts","../src/apis/native/get-network-type.ts","../src/apis/native/get-open-user-info.ts","../src/apis/native/get-status-bar-height.ts","../src/apis/native/get-storage.ts","../src/apis/native/get-system-info-sync.ts","../src/apis/native/get-small-app-info.ts","../src/apis/native/go-to-Browser.ts","../src/apis/native/hide-loading.ts","../src/apis/native/is-online.ts","../src/apis/native/native.ts","../src/apis/native/navigate/navigate-to-mini-program.ts","../src/apis/native/bluetooth/off-bluetooth-device-found.ts","../src/apis/native/bluetooth/on-bluetooth-device-found.ts","../src/apis/native/bluetooth/open-bluetooth-adapter.ts","../src/apis/native/open-document.ts","../src/apis/native/play-audio.ts","../src/apis/native/preview-image.ts","../src/apis/native/bluetooth/read-ble-characteristic-value.ts","../src/apis/native/remove-storage.ts","../src/apis/native/report/report-log.ts","../src/apis/native/report/report-performance.ts","../src/apis/native/request.ts","../src/apis/native/save-base64-image.ts","../src/apis/native/save-file-to-phone.ts","../src/apis/native/save-image.ts","../src/apis/native/scan-code.ts","../src/apis/native/set-storage.ts","../src/apis/native/show-loading.ts","../src/apis/native/show-toast.ts","../src/apis/native/bluetooth/start-bluetooth-devices-discovery.ts","../src/apis/native/stop-audio.ts","../src/apis/native/bluetooth/stop-bluetooth-devices-discovery.ts","../src/apis/native/submit-report.ts","../src/apis/native/upload-file.ts","../src/apis/native/bluetooth/write-ble-characteristic-value.ts","../src/apis/index.ts","../src/index.ts"],"sourcesContent":["export const userAgent: string =\n  window?.navigator?.userAgent?.toLocaleLowerCase();\n","import { userAgent } from './user-agent';\n\nexport const isAndroid: boolean = userAgent?.indexOf('android') !== -1;\n","import { TabBar } from 'src/types';\n\n// 全局作用域扩展 Window 声明\ndeclare global {\n  interface Window {\n    [MA_GLOBAL_KEY]: typeof globalConfig;\n    simulatorWebkit: any;\n    __simulatorConfig__: any;\n    logicLayer: any;\n  }\n}\n\nexport const CURRENT_ROUTE = Symbol(`currentRoute`);\nexport const IS_INITD = Symbol(`isInitd`);\nexport const TABBAR = Symbol(`tabBar`);\nexport const CAN_NAVIGATE_TO = Symbol(`canNavigateTo`);\n\n// 为了调试方便, 这里使用字符串常量 而不是 symbol 变量\n// TODO: 后期增加 __DEV__ 能力之后, 生产态使用 Symbol\nconst MA_GLOBAL_KEY = `__ma__global__`;\n\ntype GLOBAL_CONFIG_VAL = string | boolean | TabBar | null;\n\nconst globalConfig: Record<symbol, GLOBAL_CONFIG_VAL> = {\n  [CURRENT_ROUTE]: ``,\n  [IS_INITD]: false,\n  [TABBAR]: null,\n  [CAN_NAVIGATE_TO]: true\n};\n\n/**\n * 将变量和值挂到 window 上方便共享\n * 统一挂到 window.__ma__global__对象下, 相同的 key 会被覆盖\n */\nwindow[MA_GLOBAL_KEY] = globalConfig;\n\nexport function makeGlobal(key: symbol, val: GLOBAL_CONFIG_VAL): void {\n  globalConfig[key] = val;\n}\n\nexport function getGlobal(key: symbol): GLOBAL_CONFIG_VAL {\n  return window[MA_GLOBAL_KEY][key];\n}\n","const MiniProgram = {\n  NAVIGATE_TO: 'navigateTo',\n  NAVIGATE_BACK: 'navigateBack',\n  REDIRECT_TO: 'redirectTo',\n  SWITCH_TAB: 'switchTab',\n  RE_LAUNCH: 'reLaunch',\n  POST_MESSAGE: 'postMessage',\n  CLOSE: 'close'\n};\n\nconst Native = {\n  CHOOSE_IMAGE: 'chooseImage',\n  GET_LOCAL_IMG_DATA: 'getLocalImgData',\n  GET_LOCATION: 'getLocation',\n  PREVIEW_IMAGE: 'previewImage',\n  OPEN_DOCUMENT: 'openDocument',\n  GET_STORAGE: 'getStorage',\n  SET_STORAGE: 'setStorage',\n  REMOVE_STORAGE: 'removeStorage',\n  CLEAR_STORAGE: 'clearStorage',\n  GET_NETWORK_TYPE: 'getNetworkType',\n  SCAN_CODE: 'scanCode',\n  GET_STATUS_BAR_HEIGHT: 'getStatusBarHeight',\n  CAPSULE_STYLE: 'capsuleStyle',\n  HIDE_LOADING: 'hideLoading',\n  SHOW_LOADING: 'showLoading',\n  SHOW_TOAST: 'showToast',\n  GET_SMALL_APP_INFO: 'getsmallappinfo',\n  GO_TO_BROWSER: 'gotoBrowser',\n  SAVE_FILE_TO_PHONE: 'saveFileToPhone',\n  SAVE_IMAGE: 'saveImage',\n  SAVE_BASE64_IMAGE: 'saveBase64Image',\n  CHOOSE_CONTACT: 'chooseContact',\n  IS_ONLINE: 'isOnline',\n  REQUEST: 'request',\n  UPLOAD_FILE: 'uploadFile',\n  DOWNLOAD_FILE: 'downloadFile',\n  REPORT_EVENT: 'reportEvent',\n  REPORT_PERFORMANCE: 'reportPerformance',\n  REPORT_LOG: 'reportLog',\n  SUBMIT_REPORT: 'submitReport',\n  PLAY_VOICE: 'playVoice',\n  PLAY_AUDIO: 'playAudio',\n  GET_BACKGROUND_FETCH_DATA: 'getBackgroundFetchData',\n  GET_LAUNCH_OPTIONS_SYNC: 'getLaunchOptionsSync',\n  GET_SYSTEM_INFO_SYNC: 'getSystemInfoSync',\n  NAVIGATE_TO_MINI_PROGRAM: 'navigateToMiniProgram',\n  EXIT_MINI_PROGRAM: 'exitMiniProgram',\n  STOP_AUOID: 'stopVoice',\n  GET_OPEN_USER_INFO: 'getOpenUserInfo',\n  GET_AUTH_CODE: 'getAuthCode',\n  OPEN_BLUETOOTH_ADAPTER: 'openBluetoothAdapter',\n  CLOSE_BLUETOOTH_ADAPTER: 'closeBluetoothAdapter',\n  START_BLUETOOTH_DEVICES_DISCOVERY: 'startBluetoothDevicesDiscovery',\n  STOP_BLUETOOTH_DEVICES_DISCOVERY: 'stopBluetoothDevicesDiscovery',\n  CREATE_BLE_CONNECTION: 'createBLEConnection',\n  CLOSE_BLE_CONNECTION: 'closeBLEConnection',\n  GET_BLE_DEVICE_SERVICES: 'getBLEDeviceServices',\n  GET_BLE_DEVICE_CHARACTERISTICS: 'getBLEDeviceCharacteristics',\n  READ_BLE_CHARACTERISTIC_VALUE: 'readBLECharacteristicValue',\n  WRITE_BLE_CHARACTERISTIC_VALUE: 'writeBLECharacteristicValue',\n  ON_BLUETOOTH_DEVICE_FOUND: 'ON_BT_DEVICE_FOUND',\n  OFF_BLUETOOTH_DEVICE_FOUND: 'offBluetoothDeviceFound',\n  TRADE_PAY: 'tradePay'\n};\n\nexport const APINames = {\n  MiniProgram,\n  Native\n};\n","export const isWeb: boolean = window.parent.__simulatorConfig__ !== undefined;\n","class ApiMethod {\n  eventMap: Map<string, any>;\n  callbackMap: Map<any, any>;\n  constructor() {\n    this.eventMap = new Map();\n    this.callbackMap = new Map();\n  }\n\n  /**\n   * 根据API名称添加回调\n   * @param {String} apiName\n   * @param {Function} handles\n   */\n  on(apiName: string, handles: Function) {\n    const callback = function (...args: any[]) {\n      try {\n        handles.apply(undefined, args);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    this.callbackMap.set(handles, callback);\n    if (this.eventMap.has(apiName)) {\n      this.eventMap.get(apiName)?.add(callback);\n    } else {\n      this.eventMap.set(apiName, new Set([callback]));\n    }\n  }\n\n  /**\n   * 根据API名称和handles，删除对应的回调\n   * @param {String} apiName\n   * @param {Function} handles\n   */\n  off(apiName: string, handles?: Function) {\n    const apiEvent = this.eventMap.get(apiName);\n    if (apiEvent) {\n      if (!handles) {\n        apiEvent.clear();\n      } else {\n        const callback = this.callbackMap.get(handles);\n        apiEvent.delete(callback);\n      }\n    }\n  }\n\n  /**\n   * 根据API名称获取回调列表\n   * @param {String} apiName\n   * @returns\n   */\n  get(apiName: string) {\n    return this.eventMap.get(apiName);\n  }\n\n  /**\n   * 根据API名称执行全部的相关回调\n   * @param {String} apiName\n   * @param {Object} params\n   */\n  emit(apiName: string, params: any) {\n    const apiEvent = this.eventMap.get(apiName);\n    if (apiEvent) {\n      for (const callback of apiEvent) {\n        callback.call(this, params);\n      }\n    }\n  }\n}\n\nconst apiMethod = new ApiMethod();\nexport { apiMethod };\n","import { isAndroid, isWeb } from 'src/shared';\nimport {\n  GeneralCallbackResult,\n  GeneralCallback,\n  GeneralInvokeOption,\n  IAnyStrObject,\n  InvokeFinishedCallback\n} from 'src/types';\n\nexport type IAnyNumObject = Record<number, any>;\n\nexport interface InvokeOption extends GeneralInvokeOption {}\n\nexport interface InvokeInnerFnsOption {\n  beforeAll: GeneralCallback;\n  beforeSuccess: GeneralCallback;\n  afterSuccess: GeneralCallback;\n  beforeFail: GeneralCallback;\n  afterFail: GeneralCallback;\n  afterAll: GeneralCallback;\n}\n\n// invoke callbacks\nconst callbacks: IAnyNumObject = {};\nlet callbackIndex: number = 0;\n\nconst defaultEventHandlers: any = {};\n\nfunction invokeHandler(\n  command: string,\n  inputParams: string,\n  callbackId: number\n) {\n  if (isWeb) {\n    window.simulatorWebkit.messageHandlers.invoke.postMessage({\n      command,\n      inputParams,\n      callbackId,\n      type: 'legacy'\n    });\n  } else if (isAndroid) {\n    window.viewLayerNative.invoke(command, inputParams, callbackId);\n  } else {\n    window.webkit.messageHandlers.invoke.postMessage({\n      command,\n      inputParams,\n      callbackId\n    });\n  }\n}\n\nexport function invoke(\n  command: string,\n  inputParams: IAnyStrObject = {},\n  callback: InvokeFinishedCallback\n) {\n  const paramsString = JSON.stringify(inputParams);\n  const callbackId = ++callbackIndex;\n  callbacks[callbackId] = callback;\n  invokeHandler(command, paramsString, callbackId);\n}\n\n/**\n * 增加promise处理\n */\nexport function beforeInvoke(\n  apiName: string,\n  opts: Partial<InvokeOption & IAnyStrObject> = {},\n  innerFns: Partial<InvokeInnerFnsOption> = {}\n) {\n  if (!opts.success && !opts.fail && !opts.complete) {\n    return new Promise((resolve, reject) => {\n      opts.success = resolve;\n      opts.fail = reject;\n      invokeMethod(apiName, opts, innerFns);\n    });\n  }\n  return invokeMethod(apiName, opts, innerFns);\n}\n\n/**\n * 同步调用 Native方法, 利用 window.prompt hook\n * @param {*} command 同步调用方法名\n * @param {*} params 方法参数\n */\nexport function invokeSync(command: string, params?: Partial<IAnyStrObject>) {\n  // 同步API统一包一层 data, 方便后续 parse\n  const inputParams = JSON.stringify({ command, ...params });\n  // eslint-disable-next-line no-alert\n  return window.prompt(inputParams);\n}\n\n/**\n * 统一封装调用逻辑, 通知 Native, 调用 API\n */\nexport function invokeMethod(\n  apiName: string,\n  opts?: Partial<InvokeOption & IAnyStrObject>,\n  innerCb: Partial<InvokeInnerFnsOption> = {}\n) {\n  const invokeCbFnsObj: Record<string, GeneralCallback> = {};\n\n  for (const name in opts) {\n    if (typeof opts[name] === 'function') {\n      invokeCbFnsObj[name] = opts[name];\n      delete opts[name];\n    }\n  }\n\n  invoke(apiName, opts, (invokeStatusCode, res) => {\n    const isOk = Number(invokeStatusCode) === 0;\n    const isFail = [1, -1].includes(Number(invokeStatusCode));\n    if (isOk) {\n      innerCb?.beforeAll?.(res);\n      innerCb?.beforeSuccess?.(res);\n      invokeCbFnsObj.success?.(res);\n      innerCb?.afterSuccess?.(res);\n    } else if (isFail) {\n      innerCb?.beforeFail?.(res);\n      invokeCbFnsObj.fail?.(res);\n      innerCb?.afterFail?.(res);\n    } else {\n      innerCb?.beforeSuccess?.(res);\n      invokeCbFnsObj?.preload?.(res);\n    }\n    if (isOk || isFail) {\n      invokeCbFnsObj.complete?.(res);\n      innerCb?.afterAll?.(res);\n    }\n  });\n}\n\n/**\n * Native notify Web Page invoke result\n *\n * => viewLayer.onInvokeFinished\n */\nexport function onInvokeFinished(\n  callbackId: number,\n  invokeStatusCode: number,\n  outputParams: GeneralCallbackResult\n) {\n  const callback = callbacks[callbackId];\n  if (typeof callback === 'function') {\n    callback(invokeStatusCode, outputParams);\n  }\n  if (Number(invokeStatusCode) !== 2) {\n    delete callbacks[callbackId];\n  }\n}\n\nexport function notifyNative(command: string, params: Object = {}) {\n  const inputParams = JSON.stringify(params);\n  if (isWeb) {\n    window.simulatorWebkit.messageHandlers.notifyNative.postMessage({\n      command,\n      inputParams,\n      type: 'legacy'\n    });\n  } else if (isAndroid) {\n    window.viewLayerNative.notifyNative(command, inputParams);\n  } else {\n    window.webkit.messageHandlers.notifyNative.postMessage({\n      command,\n      inputParams\n    });\n  }\n}\n\n// 监听基础事件\nexport function onBasicEvent(event: string, handler: Function) {\n  defaultEventHandlers[event] = handler;\n}\n\n// 取消监听基础事件\nexport function offBasicEvent(event: string) {\n  defaultEventHandlers[event] = undefined;\n}\n\n// 执行注册的回调\nexport function handlerCall(handler: Function, webviewId: string, params: any) {\n  if (typeof handler === 'function') {\n    const webId = webviewId || params.webviewId || '';\n    handler(params, webId);\n  }\n}\n\nexport function onNativeNotify(event: string, webviewId: string, params: any) {\n  // 执行注册的回调\n  const handler = defaultEventHandlers[event];\n  handlerCall(handler, webviewId, params);\n}\n\nconst MacleJSBridge = {\n  invoke,\n  invokeMethod,\n  notifyNative,\n  invokeSync,\n  onNativeNotify,\n  onBasicEvent,\n  offBasicEvent\n};\n\nwindow.logicLayer = MacleJSBridge;\n\nexport default MacleJSBridge;\n","import { isAndroid, isWeb } from 'src/shared';\nimport { IAnyStrObject, IFunStrObject } from 'src/types';\n\n// subscribe handlers\nconst handlers: IFunStrObject = {};\nconst eventPrefix = 'ma_custom_event_';\n\n/**\n * subscribe web event(user)\n */\nexport function webSubscribe(eventName: string, handler: Function) {\n  handlers[eventName] = handler;\n}\n\n/**\n * subscribe custom event\n */\nexport function subscribe(eventName: string, handler: Function) {\n  handlers[`${eventPrefix}${eventName}`] = handler;\n}\n\n/**\n * trigger event handler\n */\nexport function subscribeHandler(eventName: string, data: IAnyStrObject) {\n  const handler = handlers[eventName];\n  return handler(data);\n}\n\nexport function publish(eventName: string, params: IAnyStrObject = {}) {\n  const paramsString = JSON.stringify(params);\n  publishHandler(`${eventPrefix}${eventName}`, paramsString);\n}\n\nexport function webPublish(eventName: string, params: IAnyStrObject = {}) {\n  const paramsString = JSON.stringify(params);\n  publishHandler(eventName, paramsString);\n}\n\n/**\n * 通知 Native, 处理业务事件\n */\nfunction publishHandler(eventName: string, paramsString: string) {\n  if (isWeb) {\n    window.simulatorWebkit.messageHandlers.notifyNative.postMessage({\n      eventName,\n      paramsString,\n      type: 'legacy'\n    });\n  } else if (isAndroid) {\n    window.viewLayerNative.notifyNative(eventName, paramsString);\n  } else {\n    window.webkit.messageHandlers.notifyNative.postMessage({\n      eventName,\n      paramsString\n    });\n  }\n}\n","import {\n  invoke,\n  invokeMethod,\n  beforeInvoke,\n  invokeSync,\n  notifyNative,\n  onBasicEvent\n} from './invoke';\nimport { subscribe, webSubscribe, publish, webPublish } from './eventbus';\n\nconst MacleJSBridge = {\n  invoke,\n  invokeSync,\n  invokeMethod,\n  beforeInvoke,\n  notifyNative,\n  subscribe,\n  webSubscribe,\n  publish,\n  webPublish,\n  onBasicEvent\n};\n\nexport default MacleJSBridge;\n\nexport * from './invoke';\nexport * from './eventbus';\n","import {\n  CAN_NAVIGATE_TO,\n  CURRENT_ROUTE,\n  CUSTOM_EVENT,\n  getGlobal,\n  IS_INITD,\n  makeGlobal,\n  TABBAR,\n  onBTDeviceFound\n} from 'src/shared';\nimport { subscribe, publish } from './bridges';\nimport { IAnyStrObject } from 'src/types';\n\nexport function init() {\n  // already initd\n  if (getGlobal(IS_INITD) as boolean) {\n    return;\n  }\n\n  makeGlobal(IS_INITD, true);\n  try {\n    // 增加蓝牙监听\n    onBTDeviceFound();\n    subscribe(CUSTOM_EVENT.GET_CURRENT_ROUTE, (data: IAnyStrObject) => {\n      makeGlobal(CURRENT_ROUTE, data.route);\n      makeGlobal(TABBAR, data.tabBar);\n      makeGlobal(\n        CAN_NAVIGATE_TO,\n        data.canNavigateTo !== undefined ? data.canNavigateTo : true\n      );\n    });\n    publish(CUSTOM_EVENT.GET_CURRENT_ROUTE);\n  } catch (error) {}\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { apiMethod } from './api-method';\n\nfunction onBTDeviceFound() {\n  MacleJSBridge.onBasicEvent(\n    APINames.Native.ON_BLUETOOTH_DEVICE_FOUND,\n    function (params: any) {\n      apiMethod.emit(APINames.Native.ON_BLUETOOTH_DEVICE_FOUND, params);\n    }\n  );\n}\n\nexport { onBTDeviceFound };\n","class MacleApiError extends Error {\n  fileName: string = '';\n  lineNumber: number = 1;\n  columnNumber: number = -1;\n\n  constructor(apiName: string, reason: string) {\n    const message = `${apiName} fail, ${reason}`;\n    super(message);\n    this.name = this.constructor.name;\n    if (!this.stack) {\n      return;\n    }\n    const [, fileName, lineNumber = 1, columnNumber] =\n      this.stack.match(/\\/([\\/\\w-_\\.]+\\.js):(\\d*):(\\d*)/) || [];\n    this.fileName = fileName;\n    this.lineNumber = Number(lineNumber);\n    this.columnNumber = Number(columnNumber);\n  }\n}\n\nexport default MacleApiError;\n","export const Enums = {\n  MACLE_ERROR_LOG: 'MACLE_ERROR_LOG'\n};\n","import { notifyNative } from 'src/bridges';\nimport { Enums } from '../enums';\n\nexport interface ErrorOptions {\n  key?: string;\n  message: string | Event;\n  apiName?: string;\n  keywords?: string;\n  fwkVersion?: string;\n  file?: string;\n  line?: number;\n  column?: number;\n  timestamp?: Date;\n}\n\nexport const reporter = {\n  normalError(params: ErrorOptions) {\n    console.error(params?.message);\n    notifyNative(Enums.MACLE_ERROR_LOG, {\n      key: params.key || 'MacleApiError',\n      errorStack: params.message,\n      apiName: params.apiName,\n      keywords: params.keywords,\n      fwkVersion: '',\n      file: params.file,\n      line: params.line,\n      column: params.column,\n      timestamp: Date.now()\n    });\n  }\n};\n","import { APINames, getGlobal, TABBAR } from 'src/shared';\nimport MacleApiError from 'src/shared/api-error';\nimport { reporter } from 'src/shared/reporter';\nimport { IAnyStrObject, TabBar } from 'src/types';\nimport {\n  NavigateToOption,\n  RedirectToOption,\n  SwitchTabOption,\n  ReLaunchOption\n} from './miniprogram';\n\n/**\n * fix route\n * @param currentRoute 当前路由\n * @param toUrl 目标 url\n */\nexport function getRealRoute(\n  currentRoute: string,\n  toUrl: string,\n  isHtml: boolean = true\n): string {\n  let fixedUrl = toUrl;\n\n  if (isHtml) {\n    fixedUrl = addHTMLSuffix(fixedUrl);\n  }\n\n  if (fixedUrl.startsWith('/')) {\n    return fixedUrl.substr('/'.length);\n  }\n\n  if (fixedUrl.startsWith('./')) {\n    return getRealRoute(currentRoute, fixedUrl.substr('./'.length), false);\n  }\n\n  // 移除 url 前面的 ../ 并记录其位置\n  let index;\n  let urlArrLength;\n  const urlArr = fixedUrl.split('/');\n  for (\n    index = 0, urlArrLength = urlArr.length;\n    index < urlArrLength && urlArr[index] === '..';\n    index++\n  );\n  urlArr.splice(0, index);\n  const pathArr = currentRoute.length > 0 ? currentRoute.split('/') : [];\n  pathArr.splice(pathArr.length - index - 1, index + 1);\n  return pathArr.concat(urlArr).join('/');\n}\n\nexport function encodeUrlQuery(url: string): string {\n  const urlArr = url.split('?');\n  const [urlPath, queryUrl] = urlArr;\n  if (!queryUrl) {\n    return url;\n  }\n  const queryParams = queryUrl.split('&').reduce((res: IAnyStrObject, cur) => {\n    if (typeof cur === 'string' && cur.length > 0) {\n      const curArr = cur.split('=');\n      const key = curArr[0];\n      const value = curArr[1];\n      res[key] = value;\n    }\n    return res;\n  }, Object.create(null));\n  const urlQueryArr = [];\n  for (const i in queryParams) {\n    urlQueryArr.push(i + '=' + encodeURIComponent(queryParams[i]));\n  }\n  return urlQueryArr.length > 0 ? urlPath + '?' + urlQueryArr.join('&') : url;\n}\n\nexport function addHTMLSuffix(url: string): string {\n  const urlArr = url.split('?');\n  urlArr[0] += '.html';\n  return urlArr[1] === undefined ? urlArr[0] : `${urlArr[0]}?${urlArr[1]}`;\n}\n\nexport function checkUrl(\n  apiName: string,\n  options:\n    | NavigateToOption\n    | RedirectToOption\n    | SwitchTabOption\n    | ReLaunchOption\n): boolean {\n  const tabBar = getGlobal(TABBAR) as TabBar | null;\n  if (tabBar === null) {\n    return true;\n  }\n\n  if (options.url.startsWith('/')) {\n    options.url = options.url.slice('/'.length);\n  }\n\n  // 目标 url 是否在 tabbar 中\n  const inTabBar = ((url: string) =>\n    tabBar?.list.find(e => url.indexOf(e.pagePath) === 0))(options.url);\n\n  // navigateTo 和 redirectTo API 禁止跳转到 tabbar 页面\n  if (\n    apiName === APINames.MiniProgram.NAVIGATE_TO ||\n    apiName === APINames.MiniProgram.REDIRECT_TO\n  ) {\n    if (inTabBar) {\n      reportErrorLog(\n        apiName,\n        `${apiName}: can not ${apiName} to a tabbar page`\n      );\n      return false;\n    }\n  }\n\n  // switchTab 禁止跳转到非 tabbar 页面\n  if (apiName === APINames.MiniProgram.SWITCH_TAB) {\n    if (!inTabBar) {\n      reportErrorLog(\n        apiName,\n        `${apiName}: can not ${apiName} to a non-tabbar page`\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function validateUrl(url: string) {\n  return /^(http|https):\\/\\/.*/i.test(url);\n}\n\nexport function getDataType(data: any) {\n  return Object.prototype.toString.call(data).split(' ')[1].split(']')[0];\n}\n\nexport function reportErrorLog(apiName: string, reason: string) {\n  const err = new MacleApiError(apiName, reason);\n  reporter.normalError({\n    message: err.message,\n    file: err.fileName,\n    line: err.lineNumber,\n    column: err.columnNumber\n  });\n  return err;\n}\n\n/**\n * 对象元素都转成字符串\n * @param {Object} obj\n * @returns\n */\nexport function convertObjectValueToString(obj: IAnyStrObject) {\n  const newObj: IAnyStrObject = {};\n  for (const key in obj) {\n    switch (getDataType(obj[key])) {\n      case 'String':\n        newObj[key] = obj[key];\n        break;\n      case 'Number':\n        newObj[key] = `${obj[key]}`;\n        break;\n      case 'Boolean':\n        newObj[key] = `${obj[key]}`;\n        break;\n      default:\n        newObj[key] = JSON.stringify(obj[key]);\n        break;\n    }\n  }\n  return newObj;\n}\n\n/**\n * Get请求情况下，将参数拼接到url后\n * @param {String} url\n * @param {Object} data\n * @returns 把查询参数加到url后的值\n */\nexport function addQueryStringToUrl(url: string, data: Object) {\n  if (isString(url) && isObject(data) && Object.keys(data).length) {\n    const host = url.split('?')[0];\n    const query = url.split('?')[1];\n    const oldParams: IAnyStrObject = {};\n    if (query) {\n      query.split('&').forEach(item => {\n        if (item.length) {\n          oldParams[item.split('=')[0]] = item.split('=')[1];\n        }\n      });\n    }\n    const encodeData: IAnyStrObject = {};\n    for (const [key, value] of Object.entries(data)) {\n      if (isObject(value)) {\n        encodeData[key] = JSON.stringify(value);\n      } else {\n        encodeData[key] = value;\n      }\n    }\n    return `${host}?${urlEncodeFormData(extend(oldParams, encodeData))}`;\n  }\n  return url;\n}\n\nexport function isArray(data: any) {\n  return getDataType(data) === 'Array';\n}\n\nexport function isString(data: any) {\n  return 'String' === getDataType(data);\n}\n\nexport function isObject(data: any) {\n  return 'Object' === getDataType(data);\n}\n\n/**\n * 将参数进行转码后拼接成String\n * @param {Object} data\n * @returns 参数进行转码后拼接成String\n */\nexport function urlEncodeFormData(data: any) {\n  if (!isObject(data)) {\n    return data;\n  }\n  const paramsArr = [];\n  for (const key in data) {\n    try {\n      paramsArr.push(\n        `${encodeURIComponent(key)}=${encodeURIComponent(data[key])}`\n      );\n    } catch (error) {\n      paramsArr.push(`${key}=${data[key]}`);\n    }\n  }\n  return paramsArr.join('&');\n}\n\n/**\n * 将obj合并到target对象\n * @param {IAnyStrObject} target\n * @param {IAnyStrObject} obj\n * @returns 合并后的对象\n */\nfunction extend(target: IAnyStrObject, obj: IAnyStrObject) {\n  for (const [key, value] of Object.entries(obj)) {\n    target[key] = value;\n  }\n  return target;\n}\n\n// 统一构造能上报file、line和column的日志\nexport function logErrorAndRunFail(\n  apiName: string,\n  params: IAnyStrObject,\n  reason: string\n) {\n  const err = reportErrorLog(apiName, reason);\n  if (!params.success && !params.fail && !params.complete) {\n    return new Promise((resolve, reject) => {\n      params.fail = reject;\n      params.fail({ errMsg: err.message });\n    });\n  }\n  for (const callback of ['fail', 'complete']) {\n    const emptyFn: Function = function () {};\n    params[callback]?.({ errMsg: err.message }) || emptyFn;\n  }\n  return null;\n}\n\nexport function paramCheck(\n  apiName: string,\n  params: IAnyStrObject,\n  paramTpl: IAnyStrObject,\n  name = 'parameter',\n  required = false // 必填校验\n) {\n  let result = '';\n  const pType = getDataType(params);\n  const tplType = getDataType(paramTpl);\n  if (pType !== tplType) {\n    result = `${name} should be ${tplType} instead of ${pType};`;\n    params.invalidParamObj = logErrorAndRunFail(apiName, params, result);\n    return false;\n  }\n  if (tplType !== 'Object') {\n    return true;\n  }\n  for (const [key, value] of Object.entries(paramTpl)) {\n    if (Object.prototype.hasOwnProperty.call(params, key) || required) {\n      const tplKeyType = getDataType(value);\n      const pKeyType = getDataType(params[key]);\n      if (tplKeyType !== pKeyType) {\n        result += `${key} should be ${tplKeyType} instead of ${pKeyType};`;\n      }\n    }\n  }\n  if (!result) {\n    return true;\n  }\n  params.invalidParamObj = logErrorAndRunFail(apiName, params, result);\n  return false;\n}\n\n/**\n * 进阶版的参数校验，覆盖常见的通用校验场景\n */\nexport function advanceParamCheck(\n  apiName: string,\n  params: IAnyStrObject,\n  paramTpl: IAnyStrObject,\n  options: IAnyStrObject = {}, \n  name = 'parameter'\n) {\n  const finalParamTpl = paramTplPreProcess(params, paramTpl, options); // 参数模板的前处理\n  // 检查基本类型\n  if (!paramCheck(apiName, params, finalParamTpl, name, true)) {\n    return false;\n  }\n  return paramPostCheck(apiName, params, finalParamTpl, options, name);\n}\n\n/**\n * api参数等值的前处理\n */\nfunction paramTplPreProcess(\n  params: IAnyStrObject,\n  paramTpl: IAnyStrObject,\n  options: IAnyStrObject = {}, \n) {\n  const finalParamTpl = { ...paramTpl };\n  for (let key in paramTpl) {\n    // 可选参数，在未定义时不做任何相关校验\n    if (params[key] === undefined && options[key]?.optional) {\n      delete finalParamTpl[key];\n      delete options[key];\n    }\n  }\n  return finalParamTpl;\n}\n\n/**\n * 参数后校验处理，判断空值等复杂场景\n */\nfunction paramPostCheck(\n    apiName: string,\n    params: IAnyStrObject,\n    _paramTpl: IAnyStrObject,\n    options: IAnyStrObject = {},\n    name = 'parameter'\n) {\n  let result = '';\n\n  for (let key in options) {\n    const paramValue = params[key];\n    const { nonempty } = options[key];\n    // 非空校验\n    if (nonempty) {\n      const isEmptyArr = isArray(paramValue) && !paramValue.length;\n      const isEmptyStr = isString(paramValue) && !paramValue.trim();\n      if (isEmptyArr || isEmptyStr) {\n        result += `parameter error: ${key} cannot be empty;`;\n      }\n    }\n  }\n\n  if (result) {\n    params.invalidParamObj = logErrorAndRunFail(apiName, params, result);\n    return false;\n  }\n\n  return true;\n}\n\n\nexport function scopesCheck(scopes: Array<string>) {\n  const validScopes = [\n    'AUTH_BASE',\n    'AUTH_USER',\n    'SEND_MESSAGE',\n    'USER_NICKNAME',\n    'USER_NAME',\n    'USER_LOGIN_ID',\n    'PLAINTEXT_USER_LOGIN_ID',\n    'HASH_LOGIN_ID',\n    'USER_AVATAR',\n    'USER_GENDER',\n    'USER_BIRTHDAY',\n    'USER_NATIONALITY',\n    'USER_CONTACTINFO',\n    'USER_ADDRESS',\n    'PLAINTEXT_MOBILE_PHONE'\n  ];\n  const checkInvalidScopes = (scope: string) => {\n    return validScopes.indexOf(`${scope}`.toUpperCase()) === -1;\n  };\n  return scopes.filter(checkInvalidScopes);\n}\n\nexport function requiredParamsCheck(\n  requiredParams: IAnyStrObject,\n  params: IAnyStrObject,\n  apiName: string\n) {\n  for (const [key, value] of Object.entries(requiredParams)) {\n    // 仅支持null、undefined及过滤后空字符串的校验\n    if (!value || (typeof value === 'string' && value.trim().length === 0)) {\n      params.invalidParamObj = logErrorAndRunFail(\n        apiName,\n        params,\n        `parameter error: ${key} should be required instead of Undefined or empty.`\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function tranArrayBufferToUint8Array(data: ArrayBuffer) {\n  return Array.from(new Uint8Array(data));\n}\n","import { APINames } from 'src/shared';\nimport MacleJSBridge from 'src/bridges';\n\n/**\n * 关闭小程序\n *\n * ```js\n *   ma.miniProgram.close()\n * ```\n */\nexport function close() {\n  MacleJSBridge.invokeMethod(APINames.MiniProgram.CLOSE);\n}\n","type GetEnvCallback = (ret: { miniprogram: boolean }) => void;\n\nexport function getEnv(callback: GetEnvCallback): void {\n  const miniprogram = window.__ma_environment === 'miniprogram';\n  callback({\n    miniprogram\n  });\n}\n","import { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport MacleJSBridge from 'src/bridges';\n\nexport interface NavigateBackOption extends Partial<GeneralInvokeOption> {\n  delta: number;\n}\n\n/**\n * ```js\n *   ma.miniProgram.navigateTo({\n *     delta: 1,\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function navigateBack(option: NavigateBackOption): void {\n  const fixedOption = Object.assign({ delta: 1 }, option);\n  MacleJSBridge.beforeInvoke(APINames.MiniProgram.NAVIGATE_BACK, fixedOption);\n}\n","import { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport {\n  getRealRoute,\n  encodeUrlQuery,\n  checkUrl,\n  logErrorAndRunFail\n} from '../utils';\nimport MacleJSBridge from 'src/bridges';\n\nexport interface NavigateToOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.navigateTo({\n *     url: 'example?id=1',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function navigateTo(option: NavigateToOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.MiniProgram.NAVIGATE_TO,\n      option,\n      'parameter error:parameter.url should be String instead of Undefined.'\n    );\n  }\n  const fixedOption = option;\n  fixedOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    fixedOption.url\n  );\n  fixedOption.url = encodeUrlQuery(fixedOption.url);\n\n  if (checkUrl(APINames.MiniProgram.NAVIGATE_TO, fixedOption)) {\n    MacleJSBridge.beforeInvoke(APINames.MiniProgram.NAVIGATE_TO, fixedOption);\n  }\n}\n","import { APINames } from 'src/shared';\nimport { GeneralInvokeOption, IAnyStrObject } from 'src/types';\nimport MacleJSBridge from 'src/bridges';\n\nexport interface PostMessageOption extends Partial<GeneralInvokeOption> {\n  data: string | IAnyStrObject;\n}\n\n/**\n * 向小程序发送消息，会在特定时机（小程序后退、组件销毁）触发组件的 message 事件\n * 需要通过 bindmessage 接收\n *\n * ```js\n *   ma.miniProgram.postMessage({\n *     data: 'foo' | { foo: 'bar' },\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function postMessage(option: PostMessageOption) {\n  MacleJSBridge.beforeInvoke(APINames.MiniProgram.POST_MESSAGE, option);\n}\n","import { GeneralInvokeOption } from 'src/types';\nimport {\n  getRealRoute,\n  encodeUrlQuery,\n  checkUrl,\n  logErrorAndRunFail\n} from '../utils';\nimport MacleJSBridge from 'src/bridges';\nimport { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\n\nexport interface ReLaunchOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.reLaunch({\n *     url: '/example',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function reLaunch(option: ReLaunchOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.MiniProgram.RE_LAUNCH,\n      option,\n      'parameter error:parameter.url should be String instead of Undefined.'\n    );\n  }\n  const reLaunchOption = option;\n  reLaunchOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    reLaunchOption.url\n  );\n  reLaunchOption.url = encodeUrlQuery(reLaunchOption.url);\n\n  if (checkUrl(APINames.MiniProgram.RE_LAUNCH, reLaunchOption)) {\n    MacleJSBridge.beforeInvoke(APINames.MiniProgram.RE_LAUNCH, reLaunchOption);\n  }\n}\n","import { GeneralInvokeOption } from 'src/types';\nimport {\n  getRealRoute,\n  encodeUrlQuery,\n  checkUrl,\n  logErrorAndRunFail\n} from '../utils';\nimport MacleJSBridge from 'src/bridges';\nimport { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\n\nexport interface RedirectToOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.redirectTo({\n *     url: 'example?id=1',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function redirectTo(option: RedirectToOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.MiniProgram.REDIRECT_TO,\n      option,\n      'parameter error:parameter.url should be String instead of Undefined.'\n    );\n  }\n  const redirectToOption = option;\n  redirectToOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    redirectToOption.url\n  );\n  redirectToOption.url = encodeUrlQuery(redirectToOption.url);\n\n  if (checkUrl(APINames.MiniProgram.REDIRECT_TO, redirectToOption)) {\n    MacleJSBridge.beforeInvoke(\n      APINames.MiniProgram.REDIRECT_TO,\n      redirectToOption\n    );\n  }\n}\n","import { GeneralInvokeOption } from 'src/types';\nimport {\n  getRealRoute,\n  encodeUrlQuery,\n  checkUrl,\n  logErrorAndRunFail\n} from '../utils';\nimport MacleJSBridge from 'src/bridges';\nimport { APINames, CURRENT_ROUTE, getGlobal } from 'src/shared';\n\nexport interface SwitchTabOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n/**\n * ```js\n *   ma.miniProgram.switchTab({\n *     url: '/example',\n *     success: function(res) {},\n *     fail: function(res) {},\n *     complete: function(res) {},\n *   })\n * ```\n */\nexport function switchTab(option: SwitchTabOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.MiniProgram.SWITCH_TAB,\n      option,\n      'parameter error:parameter.url should be String instead of Undefined.'\n    );\n  }\n  const switchToOption = option;\n  switchToOption.url = getRealRoute(\n    getGlobal(CURRENT_ROUTE) as string,\n    switchToOption.url\n  );\n  switchToOption.url = encodeUrlQuery(switchToOption.url);\n\n  if (checkUrl(APINames.MiniProgram.SWITCH_TAB, switchToOption)) {\n    MacleJSBridge.beforeInvoke(APINames.MiniProgram.SWITCH_TAB, switchToOption);\n  }\n}\n","import MacleJSBridge from 'src/bridges';\nimport { IAnyStrObject } from 'src/types';\nimport { reportErrorLog } from '../utils';\n\nexport type NativeCallback = (res: any) => any;\n\n// h5调用native原生方法\nexport function callNativeAPI(\n  apiName: string,\n  inputParams: IAnyStrObject = {},\n  callback: NativeCallback\n) {\n  if (!callback || typeof callback !== 'function') {\n    reportErrorLog(apiName, 'callback should be function!');\n    return;\n  }\n  MacleJSBridge.invoke(apiName, inputParams, (invokeStatusCode, res) => {\n    const isOk = Number(invokeStatusCode) === 0;\n    if (!isOk) {\n      reportErrorLog(apiName, `${res.errMsg}`);\n      return;\n    }\n    callback(res);\n  });\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { advanceParamCheck } from '../../utils';\n\nexport interface ReportEventOption {\n  eventId: string;\n  invalidParamObj?: any;\n}\n\nconst nonemptyParam = { nonempty: true }; // 非空参数\n\n// 自定义埋点上报\nexport function reportEvent(option: ReportEventOption) {\n  if (\n    advanceParamCheck(\n      APINames.Native.REPORT_EVENT,\n      option,\n      { eventId: '' },\n      { eventId: nonemptyParam }\n    )\n  ) {\n    return MacleJSBridge.notifyNative(APINames.Native.REPORT_EVENT, option);\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { advanceParamCheck } from '../../utils';\n\nexport interface ExitMiniProgramOptions extends Partial<GeneralInvokeOption> {\n  invalidParamObj?: any;\n}\n\nconst optionalParam = { optional: true }; // 可选参数\n\nexport function exitMiniProgram(option: ExitMiniProgramOptions) {\n  if (\n    advanceParamCheck(\n      APINames.Native.EXIT_MINI_PROGRAM,\n      option,\n      { clearCache: false },\n      { clearCache: optionalParam }\n    )\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.EXIT_MINI_PROGRAM,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { advanceParamCheck } from '../../utils';\n\nexport interface TradePayOptions {\n    tradeNO: string;\n    orderStr: string;\n    sign: string;\n    extendParam?: string;\n    invalidParamObj?: any;\n}\n\nconst nonemptyParam = { nonempty: true }; // 非空参数\nconst optionalParam = { optional: true }; // 可选参数\n\n// 快速接入支付\nexport function tradePay(option: TradePayOptions) {\n    if (\n        advanceParamCheck(\n            APINames.Native.TRADE_PAY,\n            option,\n            { tradeNO: '', orderStr: '', sign: '', extendParam: '' },\n            { tradeNO: nonemptyParam, orderStr: nonemptyParam, sign: nonemptyParam, extendParam: optionalParam }\n        )\n    ) {\n        return MacleJSBridge.beforeInvoke(APINames.Native.TRADE_PAY, option);\n    }\n    return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../utils';\n\nexport interface CapsuleStyleOption extends Partial<GeneralInvokeOption> {\n  style: number;\n  invalidParamObj?: '';\n}\n\n//  设置胶囊样式,style 0：黑色，1：白色\nexport function capsuleStyle(option: CapsuleStyleOption) {\n  if (paramCheck(APINames.Native.CAPSULE_STYLE, option, { style: 0 })) {\n    const validStyle: Array<number> = [0, 1];\n    if (validStyle.indexOf(option.style) === -1) {\n      return logErrorAndRunFail(\n        APINames.Native.CAPSULE_STYLE,\n        option,\n        `parameter error: invalid style ${option.style}`\n      );\n    }\n    return MacleJSBridge.beforeInvoke(APINames.Native.CAPSULE_STYLE, option);\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 选择联系人\nexport function chooseContact(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.CHOOSE_CONTACT, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface ChooseImageOption extends Partial<GeneralInvokeOption> {\n  count: number;\n  sizeType: Array<String>;\n  sourceType: Array<String>;\n}\n\n// 拍照或上传\nexport function chooseImage(option?: ChooseImageOption) {\n  const fixedOption = Object.assign(\n    {\n      count: 9,\n      sizeType: ['original', 'compressed'],\n      sourceType: ['album', 'camera']\n    },\n    option\n  );\n  return MacleJSBridge.beforeInvoke(APINames.Native.CHOOSE_IMAGE, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 清理本地数据缓存\nexport function clearStorage(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.CLEAR_STORAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { paramCheck, requiredParamsCheck } from '../../utils';\n\nexport interface CloseBLEConnectionOption extends Partial<GeneralInvokeOption> {\n  deviceId: string;\n  invalidParamObj?: '';\n}\n\n// 关闭蓝牙低功耗设备\nexport function closeBLEConnection(option: CloseBLEConnectionOption) {\n  if (\n    !requiredParamsCheck(\n      { deviceId: option.deviceId },\n      option,\n      APINames.Native.CLOSE_BLE_CONNECTION\n    )\n  ) {\n    return option.invalidParamObj;\n  }\n  if (\n    paramCheck(APINames.Native.CLOSE_BLE_CONNECTION, option, {\n      deviceId: ''\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.CLOSE_BLE_CONNECTION,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 关闭蓝牙模块\nexport function closeBluetoothAdapter(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(\n    APINames.Native.CLOSE_BLUETOOTH_ADAPTER,\n    option\n  );\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { advanceParamCheck, requiredParamsCheck } from '../../utils';\n\nexport interface CreateBLEConnectionOption\n  extends Partial<GeneralInvokeOption> {\n  deviceId: string;\n  timeout?: number;\n  invalidParamObj?: '';\n}\n\n// 连接蓝牙低功耗设备\nexport function createBLEConnection(option: CreateBLEConnectionOption) {\n  if (\n    !requiredParamsCheck(\n      { deviceId: option.deviceId },\n      option,\n      APINames.Native.CREATE_BLE_CONNECTION\n    )\n  ) {\n    return option.invalidParamObj;\n  }\n  if (\n    advanceParamCheck(\n      APINames.Native.CREATE_BLE_CONNECTION,\n      option,\n      { deviceId: '', timeout: 0 },\n      { timeout: { optional: true } }\n    )\n  ) {\n    const fixedOption = Object.assign(\n      {\n        timeout: 30000\n      },\n      option\n    );\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.CREATE_BLE_CONNECTION,\n      fixedOption\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, validateUrl } from '../utils';\n\nexport interface downloadFileOption extends Partial<GeneralInvokeOption> {\n  url: string;\n  header?: Object;\n  timeout?: number;\n}\n\n// 下载文件资源到本地\nexport function downloadFile(option: downloadFileOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.Native.DOWNLOAD_FILE,\n      option,\n      'parameter error: parameter.url should be String instead of Undefined.'\n    );\n  }\n  if (!validateUrl(option.url)) {\n    return logErrorAndRunFail(\n      APINames.Native.DOWNLOAD_FILE,\n      option,\n      `parameter error: invalid url ${option.url}`\n    );\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.DOWNLOAD_FILE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck, scopesCheck } from '../utils';\n\nexport interface GetAutoCodeOption extends Partial<GeneralInvokeOption> {\n  scopes: Array<string>;\n  invalidParamObj?: '';\n}\n\n// 获取登录凭证\nexport function getAuthCode(option: GetAutoCodeOption) {\n  if (!option.scopes) {\n    return logErrorAndRunFail(\n      APINames.Native.GET_AUTH_CODE,\n      option,\n      'parameter error:parameter.scopes should be Array<string> instead of Undefined.'\n    );\n  }\n  if (paramCheck(APINames.Native.GET_AUTH_CODE, option, { scopes: ['1'] })) {\n    const invalidScopes = scopesCheck(option.scopes);\n    if (invalidScopes.length > 0) {\n      return logErrorAndRunFail(\n        APINames.Native.GET_AUTH_CODE,\n        option,\n        `parameter error: invalid scopes ${invalidScopes}`\n      );\n    }\n    return MacleJSBridge.beforeInvoke(APINames.Native.GET_AUTH_CODE, option);\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { paramCheck, requiredParamsCheck } from '../../utils';\n\nexport interface GetBLEDeviceCharacteristicsOption\n  extends Partial<GeneralInvokeOption> {\n  deviceId: string;\n  serviceId: string;\n  invalidParamObj?: '';\n}\n\n// 获取蓝牙低功耗设备某个服务中所有特征 (characteristic)\nexport function getBLEDeviceCharacteristics(\n  option: GetBLEDeviceCharacteristicsOption\n) {\n  if (\n    !requiredParamsCheck(\n      { deviceId: option.deviceId, serviceId: option.serviceId },\n      option,\n      APINames.Native.GET_BLE_DEVICE_CHARACTERISTICS\n    )\n  ) {\n    return option.invalidParamObj;\n  }\n  if (\n    paramCheck(APINames.Native.GET_BLE_DEVICE_CHARACTERISTICS, option, {\n      deviceId: '',\n      serviceId: ''\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.GET_BLE_DEVICE_CHARACTERISTICS,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { paramCheck, requiredParamsCheck } from '../../utils';\n\nexport interface GetBLEDeviceServicesOption\n  extends Partial<GeneralInvokeOption> {\n  deviceId: string;\n  invalidParamObj?: '';\n}\n\n// 获取蓝牙低功耗设备所有服务 (service)\nexport function getBLEDeviceServices(option: GetBLEDeviceServicesOption) {\n  if (\n    !requiredParamsCheck(\n      { deviceId: option.deviceId },\n      option,\n      APINames.Native.GET_BLE_DEVICE_SERVICES\n    )\n  ) {\n    return option.invalidParamObj;\n  }\n  if (\n    paramCheck(APINames.Native.GET_BLE_DEVICE_SERVICES, option, {\n      deviceId: ''\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.GET_BLE_DEVICE_SERVICES,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface getBackgroundFetchDataOption\n  extends Partial<GeneralInvokeOption> {\n  fetchType: String;\n}\n\n// 数据预拉取\nexport function getBackgroundFetchData(option: getBackgroundFetchDataOption) {\n  if (!option.fetchType) {\n    return logErrorAndRunFail(\n      APINames.Native.GET_BACKGROUND_FETCH_DATA,\n      option,\n      'parameter error:parameter.fetchType should be string instead of Undefined.'\n    );\n  }\n  return MacleJSBridge.beforeInvoke(\n    APINames.Native.GET_BACKGROUND_FETCH_DATA,\n    option\n  );\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\n\nexport function getLaunchOptionsSync() {\n  const retStr = MacleJSBridge.invokeSync(\n    APINames.Native.GET_LAUNCH_OPTIONS_SYNC\n  );\n  return retStr && JSON.parse(retStr);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface GetLocalImgDataOption extends Partial<GeneralInvokeOption> {\n  path: string;\n}\n\n// 获取本地base64图片\nexport function getLocalImgData(option: GetLocalImgDataOption) {\n  if (!option?.path) {\n    return logErrorAndRunFail(\n      APINames.Native.GET_LOCAL_IMG_DATA,\n      option,\n      'parameter error:parameter.path should be String instead of Undefined.'\n    );\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.GET_LOCAL_IMG_DATA, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\nexport interface GetLocationOptions extends Partial<GeneralInvokeOption> {\n  useFetchData?: boolean;\n}\n\n/**\n * ```js\n *   ma.getLocation({\n *     useFetchData:false\n *     success(res) {},\n *     fail(res) {},\n *     complete(res) {},\n *   })\n * ```\n */\n\n// 获取当前地理位置信息\nexport function getLocation(option?: GetLocationOptions) {\n  const fixedOption = Object.assign(\n    {\n      useFetchData: false\n    },\n    option\n  );\n  return MacleJSBridge.beforeInvoke(APINames.Native.GET_LOCATION, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 获取网络类型\nexport function getNetworkType(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.GET_NETWORK_TYPE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 获取用户公开信息\nexport function getOpenUserInfo(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.GET_OPEN_USER_INFO, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 获取状态栏高度\nexport function getStatusBarHeight(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(\n    APINames.Native.GET_STATUS_BAR_HEIGHT,\n    option\n  );\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface GetStorageOption extends Partial<GeneralInvokeOption> {\n  key: string;\n  encrypt?: boolean;\n}\n\n// 从本地缓存中获取指定key的内容\nexport function getStorage(option: GetStorageOption) {\n  if (!option?.key) {\n    return logErrorAndRunFail(\n      APINames.Native.GET_STORAGE,\n      option,\n      'parameter error:parameters.key should be String instead of Undefined.'\n    );\n  }\n  const fixedOption = Object.assign({ encrypt: false }, option);\n  return MacleJSBridge.beforeInvoke(APINames.Native.GET_STORAGE, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\n\nexport function getSystemInfoSync() {\n  const res = MacleJSBridge.invokeSync(APINames.Native.GET_SYSTEM_INFO_SYNC);\n  return res && JSON.parse(res);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 获取小程序基本信息\nexport function getsmallappinfo(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.GET_SMALL_APP_INFO, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../utils';\n\nexport interface GotoBrowserOption extends Partial<GeneralInvokeOption> {\n  openUrl: string;\n  invalidParamObj?: '';\n}\n\n// 跳转到第三方app\nexport function gotoBrowser(option: GotoBrowserOption) {\n  if (!option.openUrl) {\n    return logErrorAndRunFail(\n      APINames.Native.GO_TO_BROWSER,\n      option,\n      'parameter error:parameter.openUrl should be String instead of Undefined.'\n    );\n  }\n  if (\n    paramCheck(APINames.Native.GO_TO_BROWSER, option, {\n      openUrl: ''\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(APINames.Native.GO_TO_BROWSER, option);\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 隐藏loading提示框\nexport function hideLoading(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.HIDE_LOADING, option);\n}\n","// 判断当前的联网状态\nexport function isOnline() {\n  return window.navigator.onLine;\n}\n","import { callNativeAPI } from './call-native-api';\nimport { IAnyStrObject } from 'src/types';\nexport function native(method: string, param?: IAnyStrObject) {\n  const finalParam = param || {};\n  return new Promise((resolve, reject) => {\n    callNativeAPI(method, finalParam, res => {\n      resolve(res);\n    });\n  });\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../../utils';\n\nexport interface NavigateToMiniProgramOptions\n  extends Partial<GeneralInvokeOption> {\n  appId: string;\n  path?: string;\n  params?: string;\n  invalidParamObj?: any;\n}\n\nexport function navigateToMiniProgram(option: NavigateToMiniProgramOptions) {\n  if (!option.appId) {\n    return logErrorAndRunFail(\n      APINames.Native.NAVIGATE_TO_MINI_PROGRAM,\n      option,\n      'parameter error:parameter.appId should be String instead of Undefined.'\n    );\n  }\n  if (\n    paramCheck(APINames.Native.NAVIGATE_TO_MINI_PROGRAM, option, {\n      appId: '',\n      path: '',\n      params: ''\n    })\n  ) {\n    if (!option.path && option.params) {\n      return logErrorAndRunFail(\n        APINames.Native.NAVIGATE_TO_MINI_PROGRAM,\n        option,\n        'parameter error: there is params but no path.'\n      );\n    }\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.NAVIGATE_TO_MINI_PROGRAM,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import { apiMethod } from '../../../shared/api-method';\nimport { APINames } from 'src/shared';\n\n// 移除搜索到新设备的事件的全局监听函数。\nexport function offBluetoothDeviceFound() {\n  apiMethod.off(APINames.Native.ON_BLUETOOTH_DEVICE_FOUND);\n}\n","import { apiMethod } from '../../../shared/api-method';\nimport { APINames } from 'src/shared';\nimport { getDataType, reportErrorLog } from '../../utils';\nconst apiName = 'onBluetoothDeviceFound';\n\n// 监听搜索到新设备的事件。\nexport function onBluetoothDeviceFound(listener: Function) {\n  if (getDataType(listener) !== 'Function') {\n    reportErrorLog(apiName, 'callback is not a function');\n    return;\n  }\n  apiMethod.on(APINames.Native.ON_BLUETOOTH_DEVICE_FOUND, listener);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 初始化蓝牙模块\nexport function openBluetoothAdapter(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(\n    APINames.Native.OPEN_BLUETOOTH_ADAPTER,\n    option\n  );\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface OpenDocumentOption extends Partial<GeneralInvokeOption> {\n  filePath: string;\n  fileType: string;\n}\n\n// 打开文件，预览文件\nexport function openDocument(option: OpenDocumentOption) {\n  if (!option?.filePath) {\n    return logErrorAndRunFail(\n      APINames.Native.OPEN_DOCUMENT,\n      option,\n      'parameter error:parameters.filePath should be String instead of Undefined.'\n    );\n  }\n  const validFileType: Array<string> = [\n    'doc',\n    'docx',\n    'xls',\n    'xlsx',\n    'ppt',\n    'pptx',\n    'pdf'\n  ];\n  if (option.fileType && validFileType.indexOf(option.fileType) === -1) {\n    return logErrorAndRunFail(\n      APINames.Native.OPEN_DOCUMENT,\n      option,\n      'parameter error:parameter.fileType is invalid value.'\n    );\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.OPEN_DOCUMENT, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, validateUrl } from '../utils';\n\nexport interface PlayAudioOption extends Partial<GeneralInvokeOption> {\n  url: string;\n}\n\n// 播放音频\nexport function playAudio(option: PlayAudioOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.Native.PLAY_AUDIO,\n      option,\n      'parameter error:parameter.url should be String instead of Undefined.'\n    );\n  }\n  if (!validateUrl(option.url)) {\n    return logErrorAndRunFail(\n      APINames.Native.PLAY_AUDIO,\n      option,\n      `parameter error: invalid url ${option.url}`\n    );\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.PLAY_VOICE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface PreviewImageOption extends Partial<GeneralInvokeOption> {\n  urls: Array<string>;\n  current: string;\n}\n\n/**\n * js\n * ma.previewImage({\n  urls: [],\n  current: '',\n  success() {},\n  fail() {},\n  complete() {}\n});\n*/\n\n// 预览图片\nexport function previewImage(option: PreviewImageOption) {\n  if (!option?.urls) {\n    return logErrorAndRunFail(\n      APINames.Native.PREVIEW_IMAGE,\n      option,\n      'parameter error:parameter.urls should be Array instead of Undefined.'\n    );\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.PREVIEW_IMAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { paramCheck, requiredParamsCheck } from '../../utils';\n\nexport interface ReadBLECharacteristicValueOption\n  extends Partial<GeneralInvokeOption> {\n  deviceId: string;\n  serviceId: string;\n  characteristicId: string;\n  invalidParamObj?: '';\n}\n\n// 读取蓝牙低功耗设备特征值的二进制数据。注意：必须设备的特征支持 read 才可以成功调用\nexport function readBLECharacteristicValue(\n  option: ReadBLECharacteristicValueOption\n) {\n  if (\n    !requiredParamsCheck(\n      {\n        deviceId: option.deviceId,\n        serviceId: option.serviceId,\n        characteristicId: option.characteristicId\n      },\n      option,\n      APINames.Native.READ_BLE_CHARACTERISTIC_VALUE\n    )\n  ) {\n    return option.invalidParamObj;\n  }\n  if (\n    paramCheck(APINames.Native.READ_BLE_CHARACTERISTIC_VALUE, option, {\n      deviceId: '',\n      serviceId: '',\n      characteristicId: ''\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.READ_BLE_CHARACTERISTIC_VALUE,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface RemoveStorageOption extends Partial<GeneralInvokeOption> {\n  key: string;\n}\n\n// 从本地缓存中移除指定key\nexport function removeStorage(option: RemoveStorageOption) {\n  if (!option?.key) {\n    return logErrorAndRunFail(\n      APINames.Native.REMOVE_STORAGE,\n      option,\n      'parameter error:parameter.key should be String instead of Undefined.'\n    );\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.REMOVE_STORAGE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { isObject, isString, logErrorAndRunFail } from '../../utils';\n\nexport interface ReportLogOption {\n  level: string;\n  log: Object | string;\n}\n\n// 日志上报\nexport function reportLog(option: ReportLogOption) {\n  if (!option.log || !(isObject(option.log) || isString(option.log))) {\n    return logErrorAndRunFail(\n      APINames.Native.REPORT_LOG,\n      option,\n      'parameter error:  parameter.log should be Object or String instead of Undefined.'\n    );\n  }\n  const validLevel = ['debug', 'info', 'error'];\n  if (option.level && validLevel.indexOf(option.level) === -1) {\n    return logErrorAndRunFail(\n      APINames.Native.REPORT_LOG,\n      option,\n      `parameter error:  invalid level ${option.level}`\n    );\n  }\n  if (isObject(option.log)) {\n    option.log = JSON.stringify(option.log);\n  }\n  const fixedOption = Object.assign(\n    {\n      level: 'info'\n    },\n    option\n  );\n  return MacleJSBridge.notifyNative(APINames.Native.REPORT_LOG, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { isObject, isString, logErrorAndRunFail } from '../../utils';\n\nexport interface ReportPerformanceOption {\n  reportEvent: string;\n  reportParams: Object;\n}\n\n// 性能指标上报\nexport function reportPerformance(option: ReportPerformanceOption) {\n  if (!option.reportEvent || !isString(option.reportEvent)) {\n    return logErrorAndRunFail(\n      APINames.Native.REPORT_PERFORMANCE,\n      option,\n      'parameter error:  parameter.reportEvent should be String instead of Undefined.'\n    );\n  }\n  if (!option.reportParams || !isObject(option.reportParams)) {\n    return logErrorAndRunFail(\n      APINames.Native.REPORT_PERFORMANCE,\n      option,\n      'parameter error:  parameter.reportParams should be Object instead of Undefined.'\n    );\n  }\n  return MacleJSBridge.notifyNative(APINames.Native.REPORT_PERFORMANCE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralCallback, GeneralInvokeOption, IAnyStrObject } from 'src/types';\nimport {\n  getDataType,\n  validateUrl,\n  convertObjectValueToString,\n  addQueryStringToUrl,\n  isObject,\n  isString,\n  logErrorAndRunFail,\n  reportErrorLog\n} from '../utils';\n\nexport interface RequestOption extends Partial<GeneralInvokeOption> {\n  url: string;\n  data?: string | Object | ArrayBuffer;\n  header?: IAnyStrObject;\n  timeout?: number;\n  method?: string;\n  dataType?: string;\n  preload?: GeneralCallback;\n}\n\n// 发起https请求\nexport function request(option: RequestOption) {\n  const errorMsg = validateParams(option);\n  if (errorMsg) {\n    return logErrorAndRunFail(APINames.Native.REQUEST, option, errorMsg);\n  }\n\n  if (option.header && !isObject(option.header)) {\n    option.header = {};\n  }\n  option.header = convertObjectValueToString(option.header || {});\n  for (const key in option.header) {\n    if ('content-type' === key.toLowerCase()) {\n      const value = option.header[key];\n      delete option.header[key];\n      option.header[key.toLowerCase()] = value;\n    }\n  }\n  option.method = option.method ? option.method.toUpperCase() : 'GET';\n  option.dataType = option.dataType || 'json';\n  option.header['content-type'] =\n    option.header['content-type'] || 'application/json';\n  let data: any = '';\n  if (option.data) {\n    data = isObject(option.data) ? JSON.stringify(option.data) : option.data;\n  }\n\n  if ('GET' === option.method) {\n    option.url = addQueryStringToUrl(option.url, option.data || {});\n  }\n  const fixOption = Object.assign({ data }, option);\n  return MacleJSBridge.beforeInvoke(APINames.Native.REQUEST, fixOption, {\n    beforeSuccess(res: any) {\n      if (option.dataType !== 'json') {\n        return;\n      }\n      try {\n        if (res.data && isString(res.data)) {\n          res.data = JSON.parse(res.data);\n        }\n      } catch (e) {\n        reportErrorLog(\n          APINames.Native.REQUEST,\n          `JSON parse data error from ${option.url}`\n        );\n      }\n    }\n  });\n}\n\nfunction validateParams(option: RequestOption) {\n  let message: string = '';\n  if (!option.url) {\n    message =\n      'parameter error: parameter.url should be String instead of Undefined.';\n  }\n  if (!validateUrl(option.url)) {\n    message = `parameter error: invalid url ${option.url}`;\n  }\n  if (option.data && 'Function' === getDataType(option.data)) {\n    message = 'parameter error: data should not be Function.';\n  }\n  return message;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../utils';\n\nexport interface SaveBase64ImageOption extends Partial<GeneralInvokeOption> {\n  base64: string;\n  invalidParamObj?: string;\n}\n\n// 保存图片到相册\nexport function saveBase64Image(option: SaveBase64ImageOption) {\n  if (!option.base64) {\n    return logErrorAndRunFail(\n      APINames.Native.SAVE_BASE64_IMAGE,\n      option,\n      'parameter error:parameter.base64 should be String instead of Undefined.'\n    );\n  }\n  if (paramCheck(APINames.Native.SAVE_BASE64_IMAGE, option, { base64: '' })) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.SAVE_BASE64_IMAGE,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../utils';\n\nexport interface SaveFileToPhoneOption extends Partial<GeneralInvokeOption> {\n  content: string;\n  fileName: string;\n  invalidParamObj?: '';\n}\n\n// 保存图片到手机\nexport function saveFileToPhone(option: SaveFileToPhoneOption) {\n  if (!option.content) {\n    return logErrorAndRunFail(\n      APINames.Native.SAVE_FILE_TO_PHONE,\n      option,\n      'parameter error:parameter.content should be String instead of Undefined.'\n    );\n  }\n  if (!option.fileName) {\n    return logErrorAndRunFail(\n      APINames.Native.SAVE_FILE_TO_PHONE,\n      option,\n      'parameter error:parameter.fileName should be String instead of Undefined.'\n    );\n  }\n  if (\n    paramCheck(APINames.Native.SAVE_FILE_TO_PHONE, option, {\n      content: '',\n      fileName: ''\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.SAVE_FILE_TO_PHONE,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../utils';\n\nexport interface SaveImageOption extends Partial<GeneralInvokeOption> {\n  content: string;\n  invalidParamObj?: '';\n}\n\n// 保存图片到相册\nexport function saveImage(option: SaveImageOption) {\n  if (!option.content) {\n    return logErrorAndRunFail(\n      APINames.Native.SAVE_IMAGE,\n      option,\n      'parameter error:parameter.content should be String instead of Undefined.'\n    );\n  }\n  if (paramCheck(APINames.Native.SAVE_IMAGE, option, { content: '' })) {\n    return MacleJSBridge.beforeInvoke(APINames.Native.SAVE_IMAGE, option);\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface ScanCodeOption extends Partial<GeneralInvokeOption> {\n  onlyFromCamera: boolean;\n  scanType: Array<string>;\n}\n\n// 扫描二维码\nexport function scanCode(option?: ScanCodeOption) {\n  // 校验scanType合法性\n  const validScanType: Array<string> = [\n    'barCode',\n    'qrCode',\n    'datamatrix',\n    'pdf417'\n  ];\n  if (option?.scanType && option.scanType.length > 0) {\n    if (!option.scanType.every(item => validScanType.indexOf(item) > -1)) {\n      return logErrorAndRunFail(\n        APINames.Native.SCAN_CODE,\n        option,\n        'parameter error:parameter.scanType contains invalid values.'\n      );\n    }\n  }\n  const fixedOption = Object.assign(\n    {\n      onlyFromCamera: false,\n      scanType: ['barCode', 'qrCode']\n    },\n    option\n  );\n  return MacleJSBridge.beforeInvoke(APINames.Native.SCAN_CODE, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface SetStorageOption extends Partial<GeneralInvokeOption> {\n  key: string;\n  data: any;\n  encrypt?: boolean;\n}\n\n// 将数据存储在本地缓存指定key中\nexport function setStorage(option: SetStorageOption) {\n  if (!option?.key || !option.data) {\n    return logErrorAndRunFail(\n      APINames.Native.SET_STORAGE,\n      option,\n      'parameter error:parameter.key or parameter.data should not be Undefined.'\n    );\n  }\n  const fixedOption = Object.assign({ encrypt: false }, option);\n  return MacleJSBridge.beforeInvoke(APINames.Native.SET_STORAGE, fixedOption);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { paramCheck } from '../utils';\n\nexport interface ShowLoadingOption extends Partial<GeneralInvokeOption> {\n  title?: string;\n  mask?: Boolean;\n  invalidParamObj?: '';\n}\n\n// 显示loading提示框，需主动调用ma.hideLoading才能关闭提示框\nexport function showLoading(option?: ShowLoadingOption) {\n  const fixedOption = Object.assign(\n    {\n      title: 'Loading...',\n      mask: false\n    },\n    option\n  );\n  if (\n    paramCheck(APINames.Native.SHOW_LOADING, fixedOption, {\n      title: '',\n      mask: false\n    })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.SHOW_LOADING,\n      fixedOption\n    );\n  }\n  return fixedOption.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail, paramCheck } from '../utils';\n\nexport interface ShowToastOption extends Partial<GeneralInvokeOption> {\n  title?: string;\n  message?: string;\n  icon?: string;\n  duration?: number;\n  mask?: Boolean;\n  image?: string;\n  invalidParamObj?: '';\n}\n\n// 显示loading提示框，需主动调用ma.hideLoading才能关闭提示框\nexport function showToast(option: ShowToastOption) {\n  if (!option?.title && !option?.message) {\n    return logErrorAndRunFail(\n      APINames.Native.SHOW_TOAST,\n      option,\n      'parameter error: prompt message should be String instead of Undefined.'\n    );\n  }\n  option.title = option.title ?? option.message;\n  if (\n    paramCheck(APINames.Native.SHOW_TOAST, option, {\n      title: '',\n      message: '',\n      icon: '',\n      duration: 0,\n      mask: false,\n      image: ''\n    })\n  ) {\n    // 校验icon合法性\n    const validIcon: Array<string> = ['success', 'error', 'loading', 'none'];\n    if (option?.icon && validIcon.indexOf(option?.icon) === -1) {\n      return logErrorAndRunFail(\n        APINames.Native.SHOW_TOAST,\n        option,\n        'parameter error:parameter.icon contains invalid values.'\n      );\n    }\n    const fixedOption = Object.assign(\n      {\n        icon: 'success',\n        duration: 1500,\n        mask: false\n      },\n      option\n    );\n    return MacleJSBridge.beforeInvoke(APINames.Native.SHOW_TOAST, fixedOption);\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { advanceParamCheck } from '../../utils';\n\nexport interface StartBluetoothDevicesDiscoveryOption\n  extends Partial<GeneralInvokeOption> {\n  services?: Array<string>;\n  invalidParamObj?: '';\n}\n\n// 开始搜寻附近的蓝牙外围设备\nexport function startBluetoothDevicesDiscovery(\n  option: StartBluetoothDevicesDiscoveryOption\n) {\n  if (\n    advanceParamCheck(\n      APINames.Native.START_BLUETOOTH_DEVICES_DISCOVERY,\n      option,\n      { services: ['1'] },\n      { services: { optional: true } })\n  ) {\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.START_BLUETOOTH_DEVICES_DISCOVERY,\n      option\n    );\n  }\n  return option.invalidParamObj;\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 结束播放音频\nexport function stopAudio(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.STOP_AUOID, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 停止搜寻附近的蓝牙外围设备\nexport function stopBluetoothDevicesDiscovery(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(\n    APINames.Native.STOP_BLUETOOTH_DEVICES_DISCOVERY,\n    option\n  );\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\n\n// 日志上报\nexport function submitReport(option?: GeneralInvokeOption) {\n  return MacleJSBridge.beforeInvoke(APINames.Native.SUBMIT_REPORT, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption } from 'src/types';\nimport { logErrorAndRunFail } from '../utils';\n\nexport interface UploadFileOption extends Partial<GeneralInvokeOption> {\n  url: string;\n  filePath?: string;\n  files?: Array<string>;\n  name: string;\n  header?: Object;\n  formData?: Object;\n  timeout?: number;\n}\n\n// 将本地资源上传到服务器\nexport function uploadFile(option: UploadFileOption) {\n  if (!option.url) {\n    return logErrorAndRunFail(\n      APINames.Native.UPLOAD_FILE,\n      option,\n      'parameter error: parameter.url should be String instead of Undefined.'\n    );\n  }\n  if (!option.files) {\n    if (!option.filePath) {\n      return logErrorAndRunFail(\n        APINames.Native.UPLOAD_FILE,\n        option,\n        'parameter error: parameter.filePath should be String instead of Undefined.'\n      );\n    }\n    if (!option.name) {\n      return logErrorAndRunFail(\n        APINames.Native.UPLOAD_FILE,\n        option,\n        'parameter error: parameter.name should be String instead of Undefined.'\n      );\n    }\n  } else {\n    option.filePath = '';\n    option.name = '';\n  }\n  return MacleJSBridge.beforeInvoke(APINames.Native.UPLOAD_FILE, option);\n}\n","import MacleJSBridge from 'src/bridges';\nimport { APINames } from 'src/shared';\nimport { GeneralInvokeOption, IAnyStrObject } from 'src/types';\nimport {\n  tranArrayBufferToUint8Array,\n  logErrorAndRunFail,\n  paramCheck,\n  requiredParamsCheck\n} from '../../utils';\n\nexport interface WriteBLECharacteristicValueOption\n  extends Partial<GeneralInvokeOption> {\n  deviceId: string;\n  serviceId: string;\n  characteristicId: string;\n  value: ArrayBuffer;\n  writeType?: string;\n  invalidParamObj?: '';\n}\n\n// 向蓝牙低功耗设备特征值中写入二进制数据。注意：必须设备的特征支持 write 才可以成功调用\nexport function writeBLECharacteristicValue(\n  option: WriteBLECharacteristicValueOption\n) {\n  const { deviceId, serviceId, characteristicId, value, writeType } = option;\n  const requiredParamField: IAnyStrObject = { deviceId, serviceId, characteristicId, value };\n  writeType !== undefined && (requiredParamField.writeType = writeType);\n  if (\n    !requiredParamsCheck(\n      requiredParamField,\n      option,\n      APINames.Native.WRITE_BLE_CHARACTERISTIC_VALUE\n    )\n  ) {\n    return option.invalidParamObj;\n  }\n  if (\n    paramCheck(APINames.Native.WRITE_BLE_CHARACTERISTIC_VALUE, option, {\n      deviceId: '',\n      serviceId: '',\n      characteristicId: '',\n      value: new ArrayBuffer(8),\n      writeType: ''\n    })\n  ) {\n    const validWriteType: Array<string> = [\n      'write',\n      'writeNoResponse',\n      'signedWrite'\n    ];\n    if (option?.writeType && validWriteType.indexOf(option?.writeType) === -1) {\n      return logErrorAndRunFail(\n        APINames.Native.WRITE_BLE_CHARACTERISTIC_VALUE,\n        option,\n        'parameter error:parameter.writeType contains invalid values.'\n      );\n    }\n    const finalValue = tranArrayBufferToUint8Array(option.value);\n    const finalOption = {\n      ...option,\n      value: finalValue\n    };\n    return MacleJSBridge.beforeInvoke(\n      APINames.Native.WRITE_BLE_CHARACTERISTIC_VALUE,\n      finalOption\n    );\n  }\n  return option.invalidParamObj;\n}\n","import * as miniProgramApi from './miniprogram';\n\nimport * as nativeApi from './native';\n\nconst APIS = {\n  // miniapp\n  miniProgram: {\n    ...miniProgramApi,\n    navigateBackMiniProgram() {},\n    onWebviewEvent() {},\n    offWebviewEvent() {},\n    sendWebviewEvent() {},\n    onShow() {},\n    onHide() {},\n    onUnload() {}\n  },\n\n  // H5 invoke Native\n  ...nativeApi,\n};\n\nexport default APIS;\n","import { init } from './init';\nimport { onInvokeFinished } from './bridges';\nimport { subscribeHandler } from './bridges';\nimport APIS from './apis';\nimport { reporter } from './shared/reporter';\n\n// 执行初始化逻辑\ndocument.readyState !== 'loading'\n  ? init()\n  : document.addEventListener('DOMContentLoaded', init);\n\n// 增加全局运行js error 监听\nwindow.onerror = function (message, url, line, column, error) {\n  reporter.normalError({\n    key: 'thirdPageParamsError',\n    message,\n    file: url,\n    line,\n    column\n  });\n};\n\n/**\n * Support use ma.api from window\n */\nwindow.ma = APIS;\n\nwindow.viewLayer = {\n  onInvokeFinished,\n  subscribeHandler\n};\n\nexport default APIS;\n"],"names":["userAgent","_b","_a","window","navigator","toLocaleLowerCase","isAndroid","indexOf","CURRENT_ROUTE","Symbol","IS_INITD","TABBAR","CAN_NAVIGATE_TO","MA_GLOBAL_KEY","globalConfig","makeGlobal","key","val","getGlobal","APINames","MiniProgram","NAVIGATE_TO","NAVIGATE_BACK","REDIRECT_TO","SWITCH_TAB","RE_LAUNCH","POST_MESSAGE","CLOSE","Native","CHOOSE_IMAGE","GET_LOCAL_IMG_DATA","GET_LOCATION","PREVIEW_IMAGE","OPEN_DOCUMENT","GET_STORAGE","SET_STORAGE","REMOVE_STORAGE","CLEAR_STORAGE","GET_NETWORK_TYPE","SCAN_CODE","GET_STATUS_BAR_HEIGHT","CAPSULE_STYLE","HIDE_LOADING","SHOW_LOADING","SHOW_TOAST","GET_SMALL_APP_INFO","GO_TO_BROWSER","SAVE_FILE_TO_PHONE","SAVE_IMAGE","SAVE_BASE64_IMAGE","CHOOSE_CONTACT","IS_ONLINE","REQUEST","UPLOAD_FILE","DOWNLOAD_FILE","REPORT_EVENT","REPORT_PERFORMANCE","REPORT_LOG","SUBMIT_REPORT","PLAY_VOICE","PLAY_AUDIO","GET_BACKGROUND_FETCH_DATA","GET_LAUNCH_OPTIONS_SYNC","GET_SYSTEM_INFO_SYNC","NAVIGATE_TO_MINI_PROGRAM","EXIT_MINI_PROGRAM","STOP_AUOID","GET_OPEN_USER_INFO","GET_AUTH_CODE","OPEN_BLUETOOTH_ADAPTER","CLOSE_BLUETOOTH_ADAPTER","START_BLUETOOTH_DEVICES_DISCOVERY","STOP_BLUETOOTH_DEVICES_DISCOVERY","CREATE_BLE_CONNECTION","CLOSE_BLE_CONNECTION","GET_BLE_DEVICE_SERVICES","GET_BLE_DEVICE_CHARACTERISTICS","READ_BLE_CHARACTERISTIC_VALUE","WRITE_BLE_CHARACTERISTIC_VALUE","ON_BLUETOOTH_DEVICE_FOUND","OFF_BLUETOOTH_DEVICE_FOUND","TRADE_PAY","isWeb","undefined","parent","__simulatorConfig__","apiMethod","constructor","this","eventMap","Map","callbackMap","on","apiName","handles","callback","args","apply","error","console","set","has","get","add","Set","off","apiEvent","delete","clear","emit","params","call","callbacks","callbackIndex","defaultEventHandlers","invoke","command","inputParams","paramsString","JSON","stringify","callbackId","simulatorWebkit","messageHandlers","postMessage","type","viewLayerNative","webkit","invokeHandler","invokeSync","prompt","invokeMethod","opts","innerCb","invokeCbFnsObj","name","invokeStatusCode","res","isOk","Number","isFail","includes","beforeAll","beforeSuccess","_c","success","_d","afterSuccess","_e","beforeFail","_f","fail","_g","afterFail","_h","_j","preload","_k","complete","_l","afterAll","notifyNative","onBasicEvent","event","handler","MacleJSBridge","onNativeNotify","webviewId","handlerCall","offBasicEvent","logicLayer","handlers","eventPrefix","subscribe","eventName","publish","publishHandler","beforeInvoke","innerFns","Promise","resolve","reject","webSubscribe","webPublish","init","data","route","tabBar","canNavigateTo","MacleApiError","Error","reason","super","fileName","lineNumber","columnNumber","stack","match","Enums","reporter","normalError","message","errorStack","keywords","fwkVersion","file","line","column","timestamp","Date","now","getRealRoute","currentRoute","toUrl","isHtml","index","urlArrLength","fixedUrl","url","urlArr","split","addHTMLSuffix","startsWith","substr","length","splice","pathArr","concat","join","encodeUrlQuery","urlPath","queryUrl","queryParams","reduce","cur","curArr","value","Object","create","urlQueryArr","i","push","encodeURIComponent","checkUrl","options","slice","inTabBar","list","find","e","pagePath","reportErrorLog","validateUrl","test","getDataType","prototype","toString","err","addQueryStringToUrl","isString","isObject","keys","host","query","oldParams","forEach","item","encodeData","entries","paramsArr","urlEncodeFormData","target","obj","extend","isArray","logErrorAndRunFail","errMsg","paramCheck","paramTpl","required","result","pType","tplType","invalidParamObj","hasOwnProperty","tplKeyType","pKeyType","advanceParamCheck","finalParamTpl","assign","optional","paramTplPreProcess","_paramTpl","paramValue","nonempty","isEmptyArr","isEmptyStr","trim","paramPostCheck","requiredParamsCheck","requiredParams","miniprogram","__ma_environment","option","fixedOption","delta","reLaunchOption","redirectToOption","switchToOption","callNativeAPI","nonemptyParam","optionalParam","style","count","sizeType","sourceType","deviceId","timeout","clearCache","scopes","invalidScopes","validScopes","filter","scope","toUpperCase","scopesCheck","serviceId","fetchType","retStr","parse","path","useFetchData","encrypt","openUrl","onLine","method","param","finalParam","appId","listener","filePath","fileType","urls","characteristicId","eventId","log","level","reportEvent","reportParams","errorMsg","validateParams","header","newObj","convertObjectValueToString","toLowerCase","dataType","fixOption","base64","content","validScanType","scanType","every","onlyFromCamera","title","mask","icon","duration","image","validIcon","services","tradeNO","orderStr","sign","extendParam","files","writeType","requiredParamField","ArrayBuffer","validWriteType","finalValue","Array","from","Uint8Array","finalOption","APIS","miniProgram","miniProgramApi","navigateBackMiniProgram","onWebviewEvent","offWebviewEvent","sendWebviewEvent","onShow","onHide","onUnload","nativeApi","document","readyState","addEventListener","onerror","ma","viewLayer","onInvokeFinished","outputParams","subscribeHandler"],"mappings":"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"}